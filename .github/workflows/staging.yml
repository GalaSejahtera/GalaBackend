name: staging

on:
  push:
    branches:
      - dev

jobs:
  dockerization:
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
    steps:
      - uses: actions/checkout@v2

      - name: Login to dockerhub
        run: echo "$DOCKERHUB_PASSWORD" | docker login -u $DOCKERHUB_USERNAME --password-stdin

      - name: Pull cache
        run: |
          docker pull safeworkout/be:staging || true
          docker pull safeworkout/be:staging-builder || true

      - name: Build builder
        run: >
          docker build .
          --file Dockerfile
          --target build_base
          --cache-from safeworkout/be:staging-builder
          --tag safeworkout/be:staging-builder
          --tag safeworkout/be:builder-${GITHUB_SHA::7}

      - name: Build image
        run: >
          docker build .
          --file Dockerfile
          --cache-from safeworkout/be:staging
          --cache-from safeworkout/be:builder-${GITHUB_SHA::7}
          --tag safeworkout/be:staging
          --tag safeworkout/be:${GITHUB_SHA::7}

      - name: Push image
        run: |
          docker push safeworkout/be:staging
          docker push safeworkout/be:${GITHUB_SHA::7}
          docker push safeworkout/be:staging-builder
          docker push safeworkout/be:builder-${GITHUB_SHA::7}

      - name: Deploy image
        uses: appleboy/ssh-action@master
        env:
          HOST: api.staging.safeworkout.org
          ACCESS_SECRET: ${{ secrets.STAGING_ACCESS_SECRET }}
          ADMIN_URL: ${{ secrets.STAGING_ADMIN_URL }}
          BACKEND_USER: ${{ secrets.STAGING_BACKEND_USER }}
          EMAIL_ADDRESS: ${{ secrets.STAGING_EMAIL_ADDRESS }}
          EMAIL_PASSWORD: ${{ secrets.STAGING_EMAIL_PASSWORD }}
          MONGODB_URL: ${{ secrets.STAGING_MONGODB_URL }}
          REFRESH_SECRET: ${{ secrets.STAGING_REFRESH_SECRET }}
          SMTP_SERVER_HOST: ${{ secrets.STAGING_SMTP_SERVER_HOST }}
          SMTP_SERVER_PORT: ${{ secrets.STAGING_SMTP_SERVER_PORT }}
          TEMPLATES_PATH: ${{ secrets.STAGING_TEMPLATES_PATH }}
          AUTH_ENABLED: ${{ secrets.STAGING_AUTH_ENABLED }}
        with:
          host: ${{ secrets.STAGING_SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          envs: '
            GITHUB_SHA,
            DOCKERHUB_USERNAME,
            DOCKERHUB_PASSWORD,
            HOST,
            ACCESS_SECRET,
            ADMIN_URL,
            BACKEND_USER,
            EMAIL_ADDRESS,
            EMAIL_PASSWORD,
            MONGODB_URL,
            REFRESH_SECRET,
            SMTP_SERVER_HOST,
            SMTP_SERVER_PORT,
            TEMPLATES_PATH,
            AUTH_ENABLED'
          script: |
            echo "$DOCKERHUB_PASSWORD" | docker login -u $DOCKERHUB_USERNAME --password-stdin
            docker pull safeworkout/be:${GITHUB_SHA::7}
            docker container stop be-staging || true
            docker container rm be-staging || true
            docker container run -d \
              --name be-staging \
              --restart=unless-stopped \
              -e "VIRTUAL_HOST=$HOST" \
              -e "VIRTUAL_PORT=10002" \
              -e "LETSENCRYPT_HOST=$HOST" \
              -e "ACCESS_SECRET=$ACCESS_SECRET" \
              -e "ADMIN_URL=$ADMIN_URL" \
              -e "BACKEND_USER=$BACKEND_USER" \
              -e "EMAIL_ADDRESS=$EMAIL_ADDRESS" \
              -e "EMAIL_PASSWORD=$EMAIL_PASSWORD" \
              -e "MONGODB_URL=$MONGODB_URL" \
              -e "REFRESH_SECRET=$REFRESH_SECRET" \
              -e "SMTP_SERVER_HOST=$SMTP_SERVER_HOST" \
              -e "SMTP_SERVER_PORT=$SMTP_SERVER_PORT" \
              -e "TEMPLATES_PATH=$TEMPLATES_PATH" \
              -e "AUTH_ENABLED=$AUTH_ENABLED" \
              safeworkout/be:${GITHUB_SHA::7}
            docker image prune -a -f && docker system prune -a -f
