{
  "swagger": "2.0",
  "info": {
    "title": "GalaSejahtera Service",
    "description": "GalaSejahtera Service handles requests from GalaSejahtera application.",
    "version": "1.0.0",
    "contact": {
      "url": "https://github.com/gala-sejahtera/galasejahtera-be",
      "email": "chinxiongwei@yahoo.com.my"
    }
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/client/users/nearby": {
      "post": {
        "summary": "Get Nearby Users",
        "operationId": "GetNearbyUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetNearbyUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbGetNearbyUsersRequest"
            }
          }
        ],
        "tags": [
          "GalaSejahteraService"
        ]
      }
    },
    "/v1/covids": {
      "get": {
        "summary": "Get Covids",
        "operationId": "GetCovids",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetCovidsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "item",
            "description": "item to sort.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "order of item.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "from",
            "description": "pagination from.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "to",
            "description": "pagination to.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "filterItem",
            "description": "item to filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterValue",
            "description": "value to filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ids",
            "description": "covid ids.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "GalaSejahteraService"
        ]
      }
    },
    "/v1/covids/{id}": {
      "get": {
        "summary": "Get Covid",
        "operationId": "GetCovid",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetCovidResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "covid id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "GalaSejahteraService"
        ]
      }
    },
    "/v1/kases": {
      "get": {
        "summary": "Get Covid Kases",
        "operationId": "GetKases",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetKasesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "GalaSejahteraService"
        ]
      }
    },
    "/v1/login": {
      "post": {
        "summary": "Login",
        "operationId": "Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbLoginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbLoginRequest"
            }
          }
        ],
        "tags": [
          "GalaSejahteraService"
        ]
      }
    },
    "/v1/logout": {
      "post": {
        "summary": "Logout",
        "operationId": "Logout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "GalaSejahteraService"
        ]
      }
    },
    "/v1/places/{id}": {
      "get": {
        "summary": "Get District",
        "operationId": "GetDistrict",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetDistrictResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "GalaSejahteraService"
        ]
      }
    },
    "/v1/refresh": {
      "post": {
        "summary": "Refresh",
        "operationId": "Refresh",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbRefreshResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {}
            }
          }
        ],
        "tags": [
          "GalaSejahteraService"
        ]
      }
    },
    "/v1/reports": {
      "get": {
        "summary": "Get Reports",
        "operationId": "GetReports",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetReportsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "item",
            "description": "item to sort.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "order of item.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "from",
            "description": "pagination from.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "to",
            "description": "pagination to.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "filterItem",
            "description": "item to filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterValue",
            "description": "value to filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ids",
            "description": "report ids.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "GalaSejahteraService"
        ]
      },
      "delete": {
        "summary": "Delete Reports",
        "operationId": "DeleteReports",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbDeleteReportsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "ids",
            "description": "report ids.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "GalaSejahteraService"
        ]
      },
      "put": {
        "summary": "Update Reports",
        "operationId": "UpdateReports",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbUpdateReportsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbUpdateReportsRequest"
            }
          }
        ],
        "tags": [
          "GalaSejahteraService"
        ]
      }
    },
    "/v1/reports/{id}": {
      "get": {
        "summary": "Get Report",
        "operationId": "GetReport",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetReportResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "report id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "GalaSejahteraService"
        ]
      },
      "delete": {
        "summary": "Delete Report",
        "operationId": "DeleteReport",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbDeleteReportResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "report id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "GalaSejahteraService"
        ]
      },
      "post": {
        "summary": "Create Report",
        "operationId": "CreateReport",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCreateReportResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "report id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCreateReportRequest"
            }
          }
        ],
        "tags": [
          "GalaSejahteraService"
        ]
      },
      "put": {
        "summary": "Update Report",
        "operationId": "UpdateReport",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbUpdateReportResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "report id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbUpdateReportRequest"
            }
          }
        ],
        "tags": [
          "GalaSejahteraService"
        ]
      }
    },
    "/v1/users": {
      "get": {
        "summary": "Get Users",
        "operationId": "GetUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "item",
            "description": "item to sort.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "order of item.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "from",
            "description": "pagination from.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "to",
            "description": "pagination to.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "filterItem",
            "description": "item to filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterValue",
            "description": "value to filter.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ids",
            "description": "user ids.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "GalaSejahteraService"
        ]
      },
      "delete": {
        "summary": "Delete Users",
        "operationId": "DeleteUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbDeleteUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "ids",
            "description": "user ids.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "GalaSejahteraService"
        ]
      },
      "put": {
        "summary": "Update Users",
        "operationId": "UpdateUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbUpdateUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbUpdateUsersRequest"
            }
          }
        ],
        "tags": [
          "GalaSejahteraService"
        ]
      }
    },
    "/v1/users/passwordreset/{token}": {
      "put": {
        "summary": "Update Password",
        "operationId": "UpdatePassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "token",
            "description": "token",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbUpdatePasswordRequest"
            }
          }
        ],
        "tags": [
          "GalaSejahteraService"
        ]
      }
    },
    "/v1/users/{id}": {
      "get": {
        "summary": "Get User",
        "operationId": "GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "user id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "GalaSejahteraService"
        ]
      },
      "delete": {
        "summary": "Delete User",
        "operationId": "DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbDeleteUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "user id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "GalaSejahteraService"
        ]
      },
      "post": {
        "summary": "Create User",
        "operationId": "CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCreateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "user id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCreateUserRequest"
            }
          }
        ],
        "tags": [
          "GalaSejahteraService"
        ]
      },
      "put": {
        "summary": "Update User",
        "operationId": "UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbUpdateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "user id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbUpdateUserRequest"
            }
          }
        ],
        "tags": [
          "GalaSejahteraService"
        ]
      }
    },
    "/v1/users/{id}/passwordreset": {
      "get": {
        "summary": "Get Password Reset",
        "operationId": "GetPasswordReset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetPasswordResetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "user id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "description": "email.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GalaSejahteraService"
        ]
      }
    }
  },
  "definitions": {
    "pbCovid": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "sid": {
          "type": "string",
          "format": "int64"
        },
        "image_feat_single": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        },
        "date_pub2": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "newsUrl": {
          "type": "string"
        }
      },
      "title": "covid payload"
    },
    "pbCreateReportRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "report id"
        },
        "data": {
          "$ref": "#/definitions/pbReport",
          "title": "report payload"
        }
      },
      "title": "create report request payload"
    },
    "pbCreateReportResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/pbReport",
          "title": "report payload"
        }
      },
      "title": "create report response payload"
    },
    "pbCreateUserRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "user id"
        },
        "data": {
          "$ref": "#/definitions/pbUser",
          "title": "user payload"
        }
      },
      "title": "create user request payload"
    },
    "pbCreateUserResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/pbUser",
          "title": "user payload"
        }
      },
      "title": "create user response payload"
    },
    "pbDeleteReportResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/pbReport",
          "title": "report payload"
        }
      },
      "title": "delete report response payload"
    },
    "pbDeleteReportsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "report ids"
        }
      },
      "title": "delete reports response payload"
    },
    "pbDeleteUserResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/pbUser",
          "title": "user payload"
        }
      },
      "title": "delete user response payload"
    },
    "pbDeleteUsersResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "user ids"
        }
      },
      "title": "delete users response payload"
    },
    "pbDistrict": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "total": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "district payload"
    },
    "pbGeneral": {
      "type": "object",
      "properties": {
        "totalConfirmed": {
          "type": "string",
          "format": "int64"
        },
        "activeCases": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "pbGetCovidResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/pbCovid",
          "title": "covid payload"
        }
      },
      "title": "get covid response payload"
    },
    "pbGetCovidsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbCovid"
          },
          "title": "covids payload"
        },
        "total": {
          "type": "string",
          "format": "int64",
          "title": "total covids"
        }
      },
      "title": "get covids response payload"
    },
    "pbGetDistrictResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/pbDistrict",
          "title": "district payload"
        }
      },
      "title": "get district response payload"
    },
    "pbGetKasesResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/pbGeneral"
        }
      },
      "title": "get kases response payload"
    },
    "pbGetNearbyUsersRequest": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/pbUser",
          "title": "user"
        }
      },
      "title": "get nearby users request payload"
    },
    "pbGetNearbyUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbUser"
          },
          "title": "list of users"
        },
        "userNum": {
          "type": "string",
          "format": "int64",
          "title": "number of nearby users"
        }
      },
      "title": "get nearby users response payload"
    },
    "pbGetPasswordResetResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "title": "password reset message"
        }
      },
      "title": "get password reset response payload"
    },
    "pbGetReportResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/pbReport",
          "title": "report payload"
        }
      },
      "title": "get report response payload"
    },
    "pbGetReportsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbReport"
          },
          "title": "reports payload"
        },
        "total": {
          "type": "string",
          "format": "int64",
          "title": "total reports"
        }
      },
      "title": "get reports response payload"
    },
    "pbGetUserResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/pbUser",
          "title": "user payload"
        }
      },
      "title": "get user response payload"
    },
    "pbGetUsersResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbUser"
          },
          "title": "users payload"
        },
        "total": {
          "type": "string",
          "format": "int64",
          "title": "total users"
        }
      },
      "title": "get users response payload"
    },
    "pbLoginRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "pbLoginResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "pbRefreshResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "pbReport": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "int64"
        },
        "hasSymptom": {
          "type": "boolean",
          "format": "boolean"
        }
      },
      "title": "report payload"
    },
    "pbUpdatePasswordRequest": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "title": "token"
        },
        "password": {
          "type": "string",
          "title": "password"
        }
      },
      "title": "get password reset request payload"
    },
    "pbUpdateReportRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "report id"
        },
        "data": {
          "$ref": "#/definitions/pbReport",
          "title": "report payload"
        }
      },
      "title": "update report request payload"
    },
    "pbUpdateReportResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/pbReport",
          "title": "report payload"
        }
      },
      "title": "update report response payload"
    },
    "pbUpdateReportsRequest": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "report ids"
        },
        "data": {
          "$ref": "#/definitions/pbReport",
          "title": "report payload"
        }
      },
      "title": "update reports request payload"
    },
    "pbUpdateReportsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "report ids"
        }
      },
      "title": "update reports response payload"
    },
    "pbUpdateUserRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "user id"
        },
        "data": {
          "$ref": "#/definitions/pbUser",
          "title": "user payload"
        }
      },
      "title": "update user request payload"
    },
    "pbUpdateUserResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/pbUser",
          "title": "user payload"
        }
      },
      "title": "update user response payload"
    },
    "pbUpdateUsersRequest": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "user ids"
        },
        "data": {
          "$ref": "#/definitions/pbUser",
          "title": "user payload"
        }
      },
      "title": "update users request payload"
    },
    "pbUpdateUsersResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "user ids"
        }
      },
      "title": "update users response payload"
    },
    "pbUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "user id"
        },
        "role": {
          "type": "string",
          "title": "user role: user"
        },
        "email": {
          "type": "string",
          "title": "user email"
        },
        "password": {
          "type": "string",
          "title": "user hashed password"
        },
        "lastUpdated": {
          "type": "string",
          "format": "int64",
          "title": "lastUpdated time"
        },
        "lat": {
          "type": "number",
          "format": "double",
          "title": "latitude"
        },
        "long": {
          "type": "number",
          "format": "double",
          "title": "longitude"
        },
        "time": {
          "type": "string",
          "format": "int64",
          "title": "time"
        },
        "isActive": {
          "type": "boolean",
          "format": "boolean"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "user payload"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
